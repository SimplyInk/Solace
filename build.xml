<!--
  build.xml
  Solace MUD Engine ant build file
  By Ryan Sandor Richards

  Usage:

  Command   What it does
  ant clean Cleans all build files including classes and jars
  ant compile Compiles all source files
  ant jar   Constructs the Solace.jar file from the compiled classes
  ant run   Executes the game server

  Alternately you can build the source using `ant jar` and then run the game
  server by using `java -jar build/jar/Solace.jar`
-->
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="solace" default="run">
  <!-- Build Properties -->
  <property name="src.dir" value="solace" />
  <property name="build.dir" value="build" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="jar.dir" value="${build.dir}/jar" />
  <property name="lib.dir" value="lib" />
  <property name="main-class" value="solace.game.Game" />

  <!-- 3rd party jars -->
  <path id="3rd-party-classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <!-- Clean target -->
  <target name="clean" description="--> clean the build directory">
    <delete dir="${build.dir}"/>
  </target>

  <!-- Ivy Target -->
  <target name="resolve" description="--> retrieve dependencies with ivy">
    <ivy:retrieve />
  </target>

  <!-- Compile target -->
  <target name="compile" depends="resolve" description="--> compile source">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}">
      <compilerarg value="-Xlint:unchecked" />
      <classpath refid="3rd-party-classpath" />
    </javac>
  </target>


  <manifestclasspath property="lib.list" jarfile="${jar.dir}/${ant.project.name}.jar">
    <classpath refid="3rd-party-classpath" />
  </manifestclasspath>

  <!-- Jar target -->
  <target name="jar" depends="compile" description="--> build solace.jar">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <manifest>
        <attribute name="Main-Class" value="${main-class}" />
        <attribute name="Class-Path" value="${lib.list}"/>
      </manifest>
    </jar>
  </target>

  <!-- Run target -->
  <target name="run" depends="jar" description="--> run solace">
    <java jar="${jar.dir}/${ant.project.name}.jar" fork="true" />
  </target>
</project>
